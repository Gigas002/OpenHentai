<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenHentai.WebAPI</name>
    </assembly>
    <members>
        <member name="M:OpenHentai.WebAPI.Controllers.AuthorController.#ctor(OpenHentai.Contexts.DatabaseContext)">
            <inheritdoc/>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.AuthorController.GetAuthorAsync(System.UInt64)">
            <summary>
            Get author from database by id
            </summary>
            <param name="id">Author's id</param>
            <returns>Author</returns>
            <response code="200">Returns requested author</response>
            <response code="400">Author is null</response>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.AuthorController.PostAuthorAsync(OpenHentai.Creatures.Author)">
             <summary>
             Add author to database
             </summary>
             <param name="author">Author to add</param>
             <returns>Created author</returns>
             <remarks>
            
             Minimal request:
            
                 POST /authors
                 { }
            
             </remarks>
             <response code="200">Returns the created author</response>
             <response code="400">Author is null</response>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.AuthorController.PostAuthorNamesAsync(System.UInt64,System.Collections.Generic.IEnumerable{OpenHentai.Relative.AuthorsNames})">
             <summary>
             Updates Author with NEW names, POSTed at their own table
             </summary>
             <remarks>
            
             Example request:
            
                 POST /authors/{id}/names
                 [{
                     "author_id": 9,
                     "name": "Test Minato",
                     "language": null
                 }]
            
             </remarks>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.AuthorController.PutAuthorCreationsAsync(System.UInt64,System.Collections.Generic.Dictionary{System.UInt64,OpenHentai.Roles.AuthorRole})">
             <remarks>
            
             Sample request:
            
                 PUT /authors/{id}/creations
                 {
                     "4": 3,
                     "1": 2
                 }
            
             </remarks>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.AuthorController.PatchAuthorAsync(System.UInt64,System.Collections.Generic.IEnumerable{SystemTextJsonPatch.Operations.Operation{OpenHentai.Creatures.Author}})">
             <remarks>
             Sample request:
            
                 PATCH /authors/{id}
                 [{
                     "path": "/age",
                     "op": "replace",
                     "value": 30
                 },
                 {
                     "path": "/authorsNames",
                     "op": "add",
                     "value": [{
                       "author_id": 8,
                       "name": "Test Bubato",
                       "language": null
                     }]
                 }]
            
             </remarks>
        </member>
        <member name="T:OpenHentai.WebAPI.Controllers.MangaController">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.MangaController.#ctor(OpenHentai.Contexts.DatabaseContext)">
            <summary>
            Database context
            </summary>
        </member>
        <member name="M:OpenHentai.WebAPI.Controllers.MangaController.GetMangaAsync(System.UInt64)">
            <summary>
            Get manga from database by id
            </summary>
            <param name="id">Manga's id</param>
            <returns>Manga</returns>
            <response code="200">Returns requested manga</response>
            <response code="400">Manga is null</response>
        </member>
        <member name="M:DatabaseController.#ctor(OpenHentai.Contexts.DatabaseContext)">
            <summary>
            Initialize database context
            </summary>
        </member>
    </members>
</doc>
